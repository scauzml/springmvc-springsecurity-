<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-4.2.xsd">
   <!--
   pattern:拦截的资源
   access:拦截的方式

   定义认证方式：
   1.使用了HttpBasic,
   2.使用FormLogin(*)
   3.定义登录页面，定义登录请求地址，定义错误处理方式
   4.使用user-service配置实现用户权限访问控制
   -->
    <security:http>
        <!--
        isFullyAuthenticated()该资源需要认证才可以访问
        isAnonymous()只有匿名用户才可以访问，（如果登录用户就无法访问）
        permitAll()允许所有人（匿名和登录用户） 方法
        -->
        <security:intercept-url pattern="/product/index" access="permitAll()"/>
        <security:intercept-url pattern="/userLogin" access="permitAll()"/>
        <security:intercept-url pattern="/product/add" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/product/update" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/product/list" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/product/delete" access="hasRole('ROLE_ADMIN')"/>

        <security:intercept-url pattern="/**" access="isFullyAuthenticated()"/>

        <!--<security:http-basic/>-->
        <!--form-login方式默认的登录url是/login-->
     <!--   <security:form-login/>-->
        <!--自定义登录页面-->
        <security:form-login login-page="/userLogin"
                             login-processing-url="/securityLogin" default-target-url="/product/index"
        authentication-success-handler-ref="myAuthenticationSuccessHandler"
        authentication-failure-handler-ref="myAuthenticationFailureHandler"/>
        <!--关闭springsecurity csrf机制-->
        <security:csrf disabled="true"/>
        <!--抛出异常都会访问错误页-->
         <security:access-denied-handler error-page="/error"/>

    </security:http>
<!--
security：authentication-manager 认证管理器，
写死方式，认证信息提供方式（账户名，密码，当前用户权限
-->
    <security:authentication-manager>
        <!--自定义UserDetailService方式-->
        <security:authentication-provider user-service-ref="myUserDetailService"/>
        <!--硬编码的实现如下-->
     <!--<security:authentication-provider>
         <security:user-service>
             <security:user name="eric" authorities="ROLE_USER" password="123456"/>
             <security:user name="zml" authorities="ROLE_ADMIN" password="123456"/>
         </security:user-service>
     </security:authentication-provider>-->
    </security:authentication-manager>
    <bean id="myUserDetailService" class="cn.sm1234.security.MyUserDetailService"/>
    <bean id="myAuthenticationSuccessHandler" class="cn.sm1234.security.MyAuthenticationSuccessHandler"/>
    <bean id="myAuthenticationFailureHandler" class="cn.sm1234.security.MyAuthenticationFailureHandler"/>
</beans>